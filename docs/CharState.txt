// Character State (0x50 bytes)
//
// Party data is stored at 7E:0500 as 4 CharState structs
//

// character
enum { BUTZ, LENNA, GALUF, FARIS, CARA, NONE=0xFF };

// character mask
#define DISABLED 0x40
#define BACKROW  0x80

// job
enum { KNIGHT, MONK, THIEF, DRAGOON, NINJA, SAMURAI, BERSERKER,
       ARCHER, MYSTIC_KNIGHT, WHITE_MAGE, BLACK_MAGE, TIME_MAGE,
       SUMMONER, BLUE_MAGE, RED_MAGE, BEAST_MASTER, CHEMIST,
       GEOMANCER, BARD, DANCER, MIMIC, NORMAL };

// ability 0-3
enum { NONE, OTHER, ITEM, ROW, DEF, FIGHT, GUARD, KICK, BUILD_UP,
       MANTRA, ESCAPE, STEAL, CAPTURE, JUMP, DRAGON_SWORD, SMOKE, IMAGE,
       THROW, SWORD_SLAP, GIL_TOSS, SLASH, ANIMALS, AIM, XFIGHT, CONJURE,
       OBSERVE, ANALYZE, TAME, CONTROL, CATCH, RELEASE, COMBINE, DRINK,
       PRAY, REVIVE, TERRAIN, DUMMY01, HIDE, SHOW, DUMMY02, SING,
       FLIRT, DANCE, MIMIC, MGC_SWORD, MGC_SWORD, MGC_SWORD, MGC_SWORD, MGC_SWORD, 
       MGC_SWORD, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, BLACK,
       BLACK, BLACK, BLACK, BLACK, BLACK, DIMEN, DIMEN, DIMEN, 
       DIMEN, DIMEN, DIMEN, SUMMON, SUMMON, SUMMON, SUMMON, SUMMON, 
       RED, RED, RED, XMAGIC, BLUE };

// status
#define BLIND  0x01
#define ZOMBIE 0x02
#define POISON 0x04
#define FLY    0x08
#define MINI   0x10
#define TOAD   0x20
#define STONE  0x40
#define DEAD   0x80

typedef struct _CharState
{
    u8          character;
    u8          job;
    u8          level;
    u24         experience;
    u16         hp, hp_max;     // 9999 max
    u16         mp, mp_max;     // 9999 max
    u8          head, body;     // equipment

    u8          relic;
    u8          rhand1, lhand1;   // equipment
    u8          rhand2, lhand2;  // worn in battle, overrides L/R 1
    u8          unk8;           // Catch / can equip?
    u8          ability[4];
    u8          status;         // +0x1a
    u8          unk[5];

    u8          unk[3];         // generated
    u8          weight?;        // generated based on equipment 
    u8          strength;       // 99 max, affected by aging 
    u8          agility;        // 99 max, affected by aging 
    u8          vitality;       // 99 max, affected by aging 
    u8          mag_power;      // 99 max, affected by aging 
    u8          strength_max;
    u8          agility_max;
    u8          vitality_max;
    u8          mag_power_max;
    u8          evade?;          // generated based on equipment 
    u8          defense;        // generated based on equipment
    u8          mag_evade?;     // generated based on equipment
    u8          mag_defense;    // generated based on equipment
    
    u8          unk[4];         // generated
    u8          unk;            // generated
    u8          unk[3];
    u8          unk[2];         // generated
    u8          job_level;
    u16         abp;            // 999 max
    u8          unk[3];         // generated

    u8          can_equip[4];   // generated, based on job
    u8          attack;         // generated based on equipment
    u8          unk;            // generated
    u8          unk[10];        // padding?    
} CharState;
